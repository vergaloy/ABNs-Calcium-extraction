function align_sessions_PV()

myFolder=uigetdir;
filePattern = fullfile(myFolder, '*.h5');
theFiles = dir(filePattern);
Vid={};
Cn={};

for i=1:size(theFiles,1)
    baseFileName = theFiles(i).name;
    fullFileName = fullfile(myFolder, baseFileName);
    fprintf(1, 'Now reading %s\n', fullFileName);
    temp=h5read(fullFileName,'/Object');
    Vid{i}=temp;
%     [Coor, PNR] = correlation_image_endoscope_PV2(temp,4);
    Cn{i}=mean(temp,3);   
end
X=catpad(3,Cn{:});
X=remove_borders(X);
X=filter_image(X);
options_rigid = NoRMCorreSetParms('d1',size(X,1),'d2',size(X,2),'d3',1,'max_shift',100,'init_batch',1);
[M,shifts,~,~] = normcorre_test(X,options_rigid);
M=remove_borders(M);
out=align(Vid,shifts);
out=catpad(3,out{:});
out=remove_borders(out);
saveash5(uint16(out),strcat(myFolder,'\concatenated_',datestr(now,'yymmddHHMMSS'),'.h5'));
end

function out=filter_image(in)
[y,x,~]=size(in);
k=0.2;
in=in(round(y*k):round(y*(1-k)),round(x*k):round(x*(1-k)),:);

h1 = fspecial('disk',12);
h2 = fspecial('disk',4);

out=zeros(size(in,1),size(in,2),size(in,3));
for i=1:size(in,3)
    temp=double(in(:,:,i));
    temp=temp-imfilter(temp,h1,'replicate');
    temp=imfilter(temp,h2,'replicate');
    m=nanmean(temp,'all');
    temp=((temp-m)*-1)+m;
%     temp=mat2gray(temp);
%     temp(temp<0.3)=0;
%     temp(temp>0.7)=1;
    out(:,:,i)=mat2gray(temp);
end
end

function out=remove_borders(in)
in(in==0)=nan;
binaryImage=isnan(mean(in,3));
[s1,s2]=size(binaryImage);
X=ones(s1+2,s2+2);
X(2:s1+1,2:s2+1)=binaryImage;
binaryImage=logical(X);
D = bwdist(binaryImage);
% imshow(D, []);
% Find the max of the EDT:
[r, c] = find(binaryImage == 0);
temp = [mean(r), mean(c)];
rowCenter=round(temp(1));
colCenter=round(temp(2));
% hold on;
% plot(colCenter, rowCenter, 'r+', 'MarkerSize', 30, 'LineWidth', 2);
%%

% Get the boundary of the blob.
boundaries = bwboundaries(~binaryImage);
b = boundaries{1}; % Extract from cell.
x = b(:, 2);
y = b(:, 1);
% Get distances from center to each of the edge pixels.
distances = sqrt((x - colCenter).^2 + (y - rowCenter).^2);
% Find the min distance.
[~, indexOfMin] = min(distances);
% Find x and y of the min
xMin = x(indexOfMin);
yMin = y(indexOfMin);
% plot(xMin, yMin, 'co', 'MarkerSize', 10, 'LineWidth', 2);
% Get the delta x and delta y from center to corner
dx = abs(colCenter - xMin);
dy = abs(rowCenter - yMin);

if (dx==0)
    st=0;
    t=0;
    while (st==0)
    t=t+1;
    temp=binaryImage(rowCenter-dy+1:rowCenter+dy-1,colCenter-t:colCenter+t);
    st=sum(temp(:));
    end
    dx=t-1;
end

if (dy==0)
    st=0;
    t=0;
    while (st==0)
    t=t+1;
    temp=binaryImage(rowCenter-t:rowCenter+t,colCenter-dx+1:colCenter+dx-1);
    st=sum(temp(:));
    end
    dy=t-1;
end
out=in(rowCenter-dy:rowCenter+dy-2,colCenter-dx:colCenter+dx-2,:);
end

function out=align(Vid,shifts)

for i=1:size(Vid,2)
    temp_shift=squeeze(shifts(i).shifts);
    temp=catpad(3,zeros(size(Vid{i},1),size(Vid{i},2)),Vid{i});
    temp=shift_subpixel(double(temp),temp_shift, 'nan');
    out{i} = uint16(temp(:,:,2:end));   
end
end

   

    
